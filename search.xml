<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>big-o</title>
    <url>/2020/08/31/big-o/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="常见Big-O速查表"><a href="#常见Big-O速查表" class="headerlink" title="常见Big-O速查表"></a>常见Big-O速查表</h2><p><img src="/" class="lazyload" data-src="/img/big-O.png"  alt="img"></p>
<h2 id="一般数据结构操作"><a href="#一般数据结构操作" class="headerlink" title="一般数据结构操作"></a>一般数据结构操作</h2><p><img src="/" class="lazyload" data-src="/img/common-data-structure.png"  alt="common data structure"></p>
<h2 id="抽象数据结构操作"><a href="#抽象数据结构操作" class="headerlink" title="抽象数据结构操作"></a>抽象数据结构操作</h2><p><img src="/" class="lazyload" data-src="/img/abstruct-data-structure.png"  alt="abstruct data structure"></p>
<h2 id="数组排序"><a href="#数组排序" class="headerlink" title="数组排序"></a>数组排序</h2><p><img src="/" class="lazyload" data-src="/img/array-sort.png"  alt="array operation"></p>
<h2 id="图操作"><a href="#图操作" class="headerlink" title="图操作"></a>图操作</h2><p><img src="/" class="lazyload" data-src="/img/picture-data-operation.png"  alt="picture operation"></p>
<h2 id="堆操作"><a href="#堆操作" class="headerlink" title="堆操作"></a>堆操作</h2><p><img src="/" class="lazyload" data-src="/img/heap-data-operation.png"  alt="heap operation"></p>
<h2 id="big-o-时间复杂度表"><a href="#big-o-时间复杂度表" class="headerlink" title="big-o 时间复杂度表"></a>big-o 时间复杂度表</h2><p><img src="/" class="lazyload" data-src="/img/big-O-complex-chart"  alt="big o chart"></p>
]]></content>
      <tags>
        <tag>algorithm</tag>
        <tag>cheatsheet</tag>
      </tags>
  </entry>
  <entry>
    <title>安装好jupyterhub后， 该如何安装我们需要的 ipython kernel 呢</title>
    <url>/2020/06/09/install-jupyter-python-kernel/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="安装好jupyterhub后，-该如何安装我们需要的-ipython-kernel-呢"><a href="#安装好jupyterhub后，-该如何安装我们需要的-ipython-kernel-呢" class="headerlink" title="安装好jupyterhub后， 该如何安装我们需要的 ipython kernel 呢"></a>安装好jupyterhub后， 该如何安装我们需要的 ipython kernel 呢</h1><h2 id="首先检查一下我们的环境"><a href="#首先检查一下我们的环境" class="headerlink" title="首先检查一下我们的环境"></a>首先检查一下我们的环境</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">which</span> conda</span><br></pre></td></tr></table></figure>
<p>如果用tljh 安装的jupyterhub， 应该显示如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;opt&#x2F;tljh&#x2F;user&#x2F;bin&#x2F;conda</span><br></pre></td></tr></table></figure>
<p>接着我们查看下conda 当前的信息</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">conda info</span><br></pre></td></tr></table></figure>
<p>下面是我的conda 信息， 这个信息对我们很重要</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">active environment : None</span><br><span class="line">            shell level : 0</span><br><span class="line">       user config file : &#x2F;root&#x2F;.condarc</span><br><span class="line"> populated config files : &#x2F;root&#x2F;.condarc</span><br><span class="line">          conda version : 4.8.3</span><br><span class="line">    conda-build version : not installed</span><br><span class="line">         python version : 3.8.2.final.0</span><br><span class="line">       virtual packages : __glibc&#x3D;2.27</span><br><span class="line">       base environment : &#x2F;opt&#x2F;conda  (writable)</span><br><span class="line">           channel URLs : https:&#x2F;&#x2F;conda.anaconda.org&#x2F;conda-forge&#x2F;linux-64</span><br><span class="line">                          https:&#x2F;&#x2F;conda.anaconda.org&#x2F;conda-forge&#x2F;noarch</span><br><span class="line">                          https:&#x2F;&#x2F;repo.anaconda.com&#x2F;pkgs&#x2F;main&#x2F;linux-64</span><br><span class="line">                          https:&#x2F;&#x2F;repo.anaconda.com&#x2F;pkgs&#x2F;main&#x2F;noarch</span><br><span class="line">                          https:&#x2F;&#x2F;repo.anaconda.com&#x2F;pkgs&#x2F;r&#x2F;linux-64</span><br><span class="line">                          https:&#x2F;&#x2F;repo.anaconda.com&#x2F;pkgs&#x2F;r&#x2F;noarch</span><br><span class="line">          package cache : &#x2F;opt&#x2F;conda&#x2F;pkgs</span><br><span class="line">                          &#x2F;root&#x2F;.conda&#x2F;pkgs</span><br><span class="line">       envs directories : &#x2F;opt&#x2F;conda&#x2F;envs</span><br><span class="line">                          &#x2F;root&#x2F;.conda&#x2F;envs</span><br><span class="line">               platform : linux-64</span><br><span class="line">             user-agent : conda&#x2F;4.8.3 requests&#x2F;2.23.0 CPython&#x2F;3.8.2 Linux&#x2F;4.15.0-101-generic ubuntu&#x2F;18.04.4 glibc&#x2F;2.27</span><br><span class="line">                UID:GID : 0:0</span><br><span class="line">             netrc file : None</span><br><span class="line">           offline mode : False</span><br></pre></td></tr></table></figure>

<p>从上面的信息， 我们可以得到这些信息</p>
<ul>
<li>active environment : None # 代表当前是默认环境</li>
<li>user config file : /root/.condarc  # config 文件的路径</li>
<li>package cache :  # 安装包所在的路径</li>
<li>envs directories:  # 环境路径</li>
<li>channel URLs： # channel 地址<br>等等</li>
</ul>
<h2 id="创建环境"><a href="#创建环境" class="headerlink" title="创建环境"></a>创建环境</h2><p>例如创建一个名为 myenv 的环境， 并且python版本为3.7 sqlite位指定版本 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda create -n myenv sqlite python&#x3D;3.7</span><br></pre></td></tr></table></figure>


<p>创建完成后，我们可以用如下命令检查</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda env list</span><br></pre></td></tr></table></figure>
<p>显示</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python                   &#x2F;opt&#x2F;conda&#x2F;envs&#x2F;python</span><br><span class="line">myenv                   &#x2F;opt&#x2F;conda&#x2F;envs&#x2F;myenv</span><br></pre></td></tr></table></figure>

<h2 id="创建kernel"><a href="#创建kernel" class="headerlink" title="创建kernel"></a>创建kernel</h2><p>用myenv的环境创建一个名为 <code>mykernel</code> 的<code>kernel</code>， <code>kernel</code>保存在<code>/usr/local</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;opt&#x2F;conda&#x2F;envs&#x2F;myenv&#x2F;bin&#x2F;python -m IPython kernel install --prefix&#x3D;&#x2F;usr&#x2F;local --name mykernel</span><br></pre></td></tr></table></figure>
<p>之后当我们note book 上选择kernel为mykernel时， python 的环境就是myenv 的环境了</p>
<p>可在notebook 中的ipython 中通过下面代码检测</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">sys.executable</span><br></pre></td></tr></table></figure>
<p>正常情况下显示<br><code>/opt/conda/envs/myenv/bin/python</code><br>代表我们的任务完成了✅</p>
<h2 id="终端查看kernel"><a href="#终端查看kernel" class="headerlink" title="终端查看kernel"></a>终端查看kernel</h2><p>命令</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">jupyter kernelspec list</span><br></pre></td></tr></table></figure>
<p>显示</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Available kernels:</span><br><span class="line">  python3       &#x2F;opt&#x2F;tljh&#x2F;user&#x2F;share&#x2F;jupyter&#x2F;kernels&#x2F;python3</span><br><span class="line">  python        &#x2F;usr&#x2F;local&#x2F;share&#x2F;jupyter&#x2F;kernels&#x2F;python</span><br><span class="line">  python2       &#x2F;usr&#x2F;local&#x2F;share&#x2F;jupyter&#x2F;kernels&#x2F;python2</span><br><span class="line">  mykernel        &#x2F;usr&#x2F;local&#x2F;share&#x2F;jupyter&#x2F;kernels&#x2F;mykernel</span><br></pre></td></tr></table></figure>


<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>jupyter</category>
      </categories>
      <tags>
        <tag>jupyter</tag>
        <tag>notebook</tag>
        <tag>ipython</tag>
        <tag>kernel</tag>
        <tag>conda</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu防火墙常用命令</title>
    <url>/2020/05/29/ubuntu-ufw/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="查看防火墙版本"><a href="#查看防火墙版本" class="headerlink" title="查看防火墙版本"></a>查看防火墙版本</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo ufw version</span><br></pre></td></tr></table></figure>

<h2 id="查看防火墙状态"><a href="#查看防火墙状态" class="headerlink" title="查看防火墙状态"></a>查看防火墙状态</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo ufw status</span><br></pre></td></tr></table></figure>
<h2 id="开启防火墙"><a href="#开启防火墙" class="headerlink" title="开启防火墙"></a>开启防火墙</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo ufw <span class="built_in">enable</span></span><br></pre></td></tr></table></figure>
<h2 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo ufw <span class="built_in">disable</span></span><br></pre></td></tr></table></figure>
<h2 id="默认允许外部访问本机"><a href="#默认允许外部访问本机" class="headerlink" title="默认允许外部访问本机"></a>默认允许外部访问本机</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo ufw default allow</span><br></pre></td></tr></table></figure>
<h2 id="默认拒绝外部访问本机"><a href="#默认拒绝外部访问本机" class="headerlink" title="默认拒绝外部访问本机"></a>默认拒绝外部访问本机</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo ufw default deny</span><br></pre></td></tr></table></figure>
<h2 id="允许外部访问443端口"><a href="#允许外部访问443端口" class="headerlink" title="允许外部访问443端口"></a>允许外部访问443端口</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo ufw allow 443</span><br></pre></td></tr></table></figure>
<h2 id="拒绝外部访问443端口"><a href="#拒绝外部访问443端口" class="headerlink" title="拒绝外部访问443端口"></a>拒绝外部访问443端口</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo ufw deny 443</span><br></pre></td></tr></table></figure>
<h2 id="允许某个IP地址访问本机所有端口"><a href="#允许某个IP地址访问本机所有端口" class="headerlink" title="允许某个IP地址访问本机所有端口"></a>允许某个IP地址访问本机所有端口</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo ufw allow from 192.168.0.1</span><br></pre></td></tr></table></figure>
<h2 id="ufw详细说明"><a href="#ufw详细说明" class="headerlink" title="ufw详细说明"></a>ufw详细说明</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">UFW:(8)                                                                                February 2016                                                                               UFW:(8)</span><br><span class="line"></span><br><span class="line">NAME</span><br><span class="line">       ufw - program <span class="keyword">for</span> managing a netfilter firewall</span><br><span class="line"></span><br><span class="line">DESCRIPTION</span><br><span class="line">       This program is <span class="keyword">for</span> managing a Linux firewall and aims to provide an easy to use interface <span class="keyword">for</span> the user.</span><br><span class="line"></span><br><span class="line">USAGE</span><br><span class="line">       ufw [--dry-run] <span class="built_in">enable</span>|<span class="built_in">disable</span>|reload</span><br><span class="line"></span><br><span class="line">       ufw [--dry-run] default allow|deny|reject [incoming|outgoing|routed]</span><br><span class="line"></span><br><span class="line">       ufw [--dry-run] logging on|off|LEVEL</span><br><span class="line"></span><br><span class="line">       ufw [--dry-run] reset</span><br><span class="line"></span><br><span class="line">       ufw [--dry-run] status [verbose|numbered]</span><br><span class="line"></span><br><span class="line">       ufw [--dry-run] show REPORT</span><br><span class="line"></span><br><span class="line">       ufw [--dry-run] [delete] [insert NUM] [prepend] allow|deny|reject|<span class="built_in">limit</span> [<span class="keyword">in</span>|out] [<span class="built_in">log</span>|<span class="built_in">log</span>-all] [ PORT[/PROTOCOL] | APPNAME ] [comment COMMENT]</span><br><span class="line"></span><br><span class="line">       ufw [--dry-run] [rule] [delete] [insert NUM] [prepend] allow|deny|reject|<span class="built_in">limit</span> [<span class="keyword">in</span>|out [on INTERFACE]] [<span class="built_in">log</span>|<span class="built_in">log</span>-all] [proto PROTOCOL] [from ADDRESS [port PORT | app APPNAME ]] [to</span><br><span class="line">       ADDRESS [port PORT | app APPNAME ]] [comment COMMENT]</span><br><span class="line"></span><br><span class="line">       ufw [--dry-run] route [delete] [insert NUM] [prepend] allow|deny|reject|<span class="built_in">limit</span> [<span class="keyword">in</span>|out on INTERFACE] [<span class="built_in">log</span>|<span class="built_in">log</span>-all] [proto PROTOCOL] [from ADDRESS [port PORT  |  app  APPNAME]]  [to</span><br><span class="line">       ADDRESS [port PORT | app APPNAME]] [comment COMMENT]</span><br><span class="line"></span><br><span class="line">       ufw [--dry-run] delete NUM</span><br><span class="line"></span><br><span class="line">       ufw [--dry-run] app list|info|default|update</span><br><span class="line"></span><br><span class="line">OPTIONS</span><br><span class="line">       --version</span><br><span class="line">              show program<span class="string">'s version number and exit</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       -h, --help</span></span><br><span class="line"><span class="string">              show help message and exit</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       --dry-run</span></span><br><span class="line"><span class="string">              don'</span>t modify anything, just show the changes</span><br><span class="line"></span><br><span class="line">       <span class="built_in">enable</span> reloads firewall and enables firewall on boot.</span><br><span class="line"></span><br><span class="line">       <span class="built_in">disable</span></span><br><span class="line">              unloads firewall and disables firewall on boot</span><br><span class="line"></span><br><span class="line">       reload reloads firewall</span><br><span class="line"></span><br><span class="line">       default allow|deny|reject DIRECTION</span><br><span class="line">              change  the  default  policy <span class="keyword">for</span> traffic going DIRECTION, <span class="built_in">where</span> DIRECTION is one of incoming, outgoing or routed. Note that existing rules will have to be migrated manually</span><br><span class="line">              when changing the default policy. See RULE SYNTAX <span class="keyword">for</span> more on deny and reject.</span><br><span class="line"></span><br><span class="line">       logging on|off|LEVEL</span><br><span class="line">              toggle logging. Logged packets use the LOG_KERN syslog facility. Systems configured <span class="keyword">for</span> rsyslog support may also <span class="built_in">log</span> to /var/<span class="built_in">log</span>/ufw.log. Specifying a LEVEL  turns  logging</span><br><span class="line">              on <span class="keyword">for</span> the specified LEVEL. The default <span class="built_in">log</span> level is <span class="string">'low'</span>.  See LOGGING <span class="keyword">for</span> details.</span><br><span class="line"></span><br><span class="line">       reset  Disables and resets firewall to installation defaults. Can also give the --force option to perform the reset without confirmation.</span><br><span class="line"></span><br><span class="line">       status show  status  of  firewall  and ufw managed rules. Use status verbose <span class="keyword">for</span> extra information. In the status output, <span class="string">'Anywhere'</span> is synonymous with <span class="string">'any'</span> and <span class="string">'0.0.0.0/0'</span>. Note</span><br><span class="line">              that when using status, there is a subtle difference when reporting interfaces. For example, <span class="keyword">if</span> the following rules are added:</span><br><span class="line"></span><br><span class="line">                ufw allow <span class="keyword">in</span> on eth0 from 192.168.0.0/16</span><br><span class="line">                ufw allow out on eth1 to 10.0.0.0/8</span><br><span class="line">                ufw route allow <span class="keyword">in</span> on eth0 out on eth1 to 10.0.0.0/8 from 192.168.0.0/16</span><br><span class="line">                ufw <span class="built_in">limit</span> 2222/tcp comment <span class="string">'SSH port'</span></span><br><span class="line"></span><br><span class="line">              ufw status will output:</span><br><span class="line"></span><br><span class="line">                To                         Action      From</span><br><span class="line">                --                         ------      ----</span><br><span class="line">                Anywhere on eth0           ALLOW       192.168.0.0/16</span><br><span class="line">                10.0.0.0/8                 ALLOW OUT   Anywhere on eth1</span><br><span class="line">                10.0.0.0/8 on eth1         ALLOW FWD   192.168.0.0/16 on eth0</span><br><span class="line">                Anywhere                   LIMIT       Anywhere                 <span class="comment"># SSH port</span></span><br><span class="line"></span><br><span class="line">              For the input and output rules, the interface is reported relative to the firewall system as an endpoint, whereas with route rules, the interface is  reported  relative  to</span><br><span class="line">              the direction packets flow through the firewall.</span><br><span class="line"></span><br><span class="line">       show REPORT</span><br><span class="line">              display information about the running firewall. See REPORTS</span><br><span class="line"></span><br><span class="line">       allow ARGS</span><br><span class="line">              add allow rule.  See RULE SYNTAX</span><br><span class="line"></span><br><span class="line">       deny ARGS</span><br><span class="line">              add deny rule.  See RULE SYNTAX</span><br><span class="line"></span><br><span class="line">       reject ARGS</span><br><span class="line">              add reject rule.  See RULE SYNTAX</span><br><span class="line"></span><br><span class="line">       <span class="built_in">limit</span> ARGS</span><br><span class="line">              add <span class="built_in">limit</span> rule.  Currently only IPv4 is supported.  See RULE SYNTAX</span><br><span class="line"></span><br><span class="line">       delete RULE|NUM</span><br><span class="line">              deletes the corresponding RULE</span><br><span class="line"></span><br><span class="line">       insert NUM RULE</span><br><span class="line">              insert the corresponding RULE as rule number NUM</span><br><span class="line"></span><br><span class="line">       prepend RULE</span><br><span class="line">              prepend the corresponding RULE to the top of the ruleset</span><br><span class="line"></span><br><span class="line">RULE SYNTAX</span><br><span class="line">       Users can specify rules using either a simple syntax or a full syntax. The simple syntax only specifies the port and optionally the protocol to be allowed or denied on the host.</span><br><span class="line"></span><br><span class="line">       Both syntaxes support specifying a comment <span class="keyword">for</span> the rule. For existing rules, specifying a different comment updates the comment and specifying <span class="string">''</span> removes the comment.</span><br><span class="line"></span><br><span class="line">       Example rules using the simple syntax:</span><br><span class="line"></span><br><span class="line">         ufw allow 53</span><br><span class="line"></span><br><span class="line">       This rule will allow tcp and udp port 53 to any address on this host. To specify a protocol, append <span class="string">'/protocol'</span> to the port. For example:</span><br><span class="line"></span><br><span class="line">         ufw allow 25/tcp</span><br><span class="line"></span><br><span class="line">       This will allow tcp port 25 to any address on this host. ufw will also check /etc/services <span class="keyword">for</span> the port and protocol <span class="keyword">if</span> specifying a service by name.  Eg:</span><br><span class="line"></span><br><span class="line">         ufw allow smtp</span><br><span class="line"></span><br><span class="line">       ufw  supports  both  ingress and egress filtering and users may optionally specify a direction of either <span class="keyword">in</span> or out <span class="keyword">for</span> either incoming or outgoing traffic. If no direction is sup‐</span><br><span class="line">       plied, the rule applies to incoming traffic. Eg:</span><br><span class="line"></span><br><span class="line">         ufw allow <span class="keyword">in</span> http</span><br><span class="line">         ufw reject out smtp</span><br><span class="line">         ufw reject telnet comment <span class="string">'telnet is unencrypted'</span></span><br><span class="line"></span><br><span class="line">       Users can also use a fuller syntax, specifying the <span class="built_in">source</span> and destination addresses and ports. This syntax is loosely based on OpenBSD<span class="string">'s PF syntax. For example:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         ufw deny proto tcp to any port 80</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       This will deny all traffic to tcp port 80 on this host. Another example:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         ufw deny proto tcp from 10.0.0.0/8 to 192.168.0.1 port 25</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       This will deny all traffic from the RFC1918 Class A network to tcp port 25 with the address 192.168.0.1.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         ufw deny proto tcp from 2001:db8::/32 to any port 25</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       This will deny all traffic from the IPv6 2001:db8::/32 to tcp port 25 on this host. IPv6 must be enabled in /etc/default/ufw for IPv6 firewalling to work.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         ufw deny in on eth0 to 224.0.0.1 proto igmp</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       This will deny all igmp traffic to 224.0.0.1 on the eth0 interface.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         ufw allow in on eth0 to 192.168.0.1 proto gre</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       This will allow all gre traffic to 192.168.0.1 on the eth0 interface.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         ufw allow proto tcp from any to any port 80,443,8080:8090 comment '</span>web app<span class="string">'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       The above will allow all traffic to tcp ports 80, 443 and 8080-8090 inclusive and adds a comment for the rule. When specifying multiple ports, the ports list must be numeric, can‐</span></span><br><span class="line"><span class="string">       not  contain  spaces  and  must  be modified as a whole. Eg, in the above example you cannot later try to delete just the '</span>443<span class="string">' port. You cannot specify more than 15 ports (ranges</span></span><br><span class="line"><span class="string">       count as 2 ports, so the port count in the above example is 4).</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       ufw supports several different protocols. The following are valid in any rule and enabled when the protocol is not specified:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         tcp</span></span><br><span class="line"><span class="string">         udp</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       The following have certain restrictions and are not enabled when the protocol is not specified:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         ah      valid without port number</span></span><br><span class="line"><span class="string">         esp     valid without port number</span></span><br><span class="line"><span class="string">         gre     valid without port number</span></span><br><span class="line"><span class="string">         ipv6    valid for IPv4 addresses and without port number</span></span><br><span class="line"><span class="string">         igmp    valid for IPv4 addresses and without port number</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       Rules for traffic not destined for the host itself but instead for traffic that should be routed/forwarded through the firewall should specify the route keyword  before  the  rule</span></span><br><span class="line"><span class="string">       (routing rules differ significantly from PF syntax and instead take into account netfilter FORWARD chain conventions). For example:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         ufw route allow in on eth1 out on eth2</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       This will allow all traffic routed to eth2 and coming in on eth1 to traverse the firewall.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         ufw route allow in on eth0 out on eth1 to 12.34.45.67 port 80 proto tcp</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       This rule allows any packets coming in on eth0 to traverse the firewall out on eth1 to tcp port 80 on 12.34.45.67.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       In addition to routing rules and policy, you must also setup IP forwarding.  This may be done by setting the following in /etc/ufw/sysctl.conf:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         net/ipv4/ip_forward=1</span></span><br><span class="line"><span class="string">         net/ipv6/conf/default/forwarding=1</span></span><br><span class="line"><span class="string">         net/ipv6/conf/all/forwarding=1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       then restarting the firewall:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         ufw disable</span></span><br><span class="line"><span class="string">         ufw enable</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       Be aware that setting kernel tunables is operating system specific and ufw sysctl settings may be overridden. See the sysctl manual page for details.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       ufw supports connection rate limiting, which is useful for protecting against brute-force login attacks. When a limit rule is used, ufw will normally allow the connection but will</span></span><br><span class="line"><span class="string">       deny connections if an IP address attempts to initiate 6 or more connections within 30 seconds. See http://www.debian-administration.org/articles/187 for  details.  Typical  usage</span></span><br><span class="line"><span class="string">       is:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         ufw limit ssh/tcp</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       Sometimes it is desirable to let the sender know when traffic is being denied, rather than simply ignoring it. In these cases, use reject instead of deny.  For example:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         ufw reject auth</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       By  default,  ufw  will apply rules to all available interfaces. To limit this, specify DIRECTION on INTERFACE, where DIRECTION is one of in or out (interface aliases are not sup‐</span></span><br><span class="line"><span class="string">       ported).  For example, to allow all new incoming http connections on eth0, use:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         ufw allow in on eth0 to any port 80 proto tcp</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       To delete a rule, simply prefix the original rule with delete with or without the rule comment. For example, if the original rule was:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         ufw deny 80/tcp</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       Use this to delete it:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         ufw delete deny 80/tcp</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       You may also specify the rule by NUM, as seen in the status numbered output. For example, if you want to delete rule number '</span>3<span class="string">', use:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         ufw delete 3</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       If you have IPv6 enabled and are deleting a generic rule that applies to both IPv4 and IPv6 (eg '</span>ufw allow 22/tcp<span class="string">'), deleting by rule number will delete only the  specified  rule.</span></span><br><span class="line"><span class="string">       To delete both with one command, prefix the original rule with delete.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       To  insert  a  rule,  specify the new rule as normal, but prefix the rule with the rule number to insert. For example, if you have four rules, and you want to insert a new rule as</span></span><br><span class="line"><span class="string">       rule number three, use:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         ufw insert 3 deny to any port 22 from 10.0.0.135 proto tcp</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       Similarly, to add a rule before all other rules matching the rule'</span>s IP <span class="built_in">type</span>, use the prepend rule:</span><br><span class="line"></span><br><span class="line">         ufw prepend deny from 1.2.3.4</span><br><span class="line"></span><br><span class="line">       This is particularly useful <span class="keyword">for</span> dynamic firewalls as found <span class="keyword">in</span> an IPS.  Importantly, <span class="keyword">if</span> the specified rule is an IPv4 rule, it will be prepended before all other IPv4 rules. If  it</span><br><span class="line">       is an IPv6 rule, it will be prepended before any IPv6 rules.</span><br><span class="line"></span><br><span class="line">       To see a list of numbered rules, use:</span><br><span class="line"></span><br><span class="line">         ufw status numbered</span><br><span class="line"></span><br><span class="line">       ufw  supports  per  rule logging. By default, no logging is performed when a packet matches a rule. Specifying <span class="built_in">log</span> will <span class="built_in">log</span> all new connections matching the rule, and <span class="built_in">log</span>-all will</span><br><span class="line">       <span class="built_in">log</span> all packets matching the rule.  For example, to allow and <span class="built_in">log</span> all new ssh connections, use:</span><br><span class="line"></span><br><span class="line">         ufw allow <span class="built_in">log</span> 22/tcp</span><br><span class="line"></span><br><span class="line">       See LOGGING <span class="keyword">for</span> more information on logging.</span><br><span class="line"></span><br><span class="line">EXAMPLES</span><br><span class="line">       Deny all access to port 53:</span><br><span class="line"></span><br><span class="line">         ufw deny 53</span><br><span class="line"></span><br><span class="line">       Allow all access to tcp port 80:</span><br><span class="line"></span><br><span class="line">         ufw allow 80/tcp</span><br><span class="line"></span><br><span class="line">       Allow all access from RFC1918 networks to this host:</span><br><span class="line"></span><br><span class="line">         ufw allow from 10.0.0.0/8</span><br><span class="line">         ufw allow from 172.16.0.0/12</span><br><span class="line">         ufw allow from 192.168.0.0/16</span><br><span class="line"></span><br><span class="line">       Deny access to udp port 514 from host 1.2.3.4:</span><br><span class="line"></span><br><span class="line">         ufw deny proto udp from 1.2.3.4 to any port 514</span><br><span class="line"></span><br><span class="line">       Allow access to udp 1.2.3.4 port 5469 from 1.2.3.5 port 5469:</span><br><span class="line"></span><br><span class="line">         ufw allow proto udp from 1.2.3.5 port 5469 to 1.2.3.4 port 5469</span><br><span class="line"></span><br><span class="line">REMOTE MANAGEMENT</span><br><span class="line">       When running ufw <span class="built_in">enable</span> or starting ufw via its initscript, ufw will flush its chains. This is required so ufw can maintain a consistent state, but it may  drop  existing  connec‐</span><br><span class="line">       tions (eg ssh). ufw does support adding rules before enabling the firewall, so administrators can <span class="keyword">do</span>:</span><br><span class="line"></span><br><span class="line">         ufw allow proto tcp from any to any port 22</span><br><span class="line"></span><br><span class="line">       before running <span class="string">'ufw enable'</span>. The rules will still be flushed, but the ssh port will be open after enabling the firewall. Please note that once ufw is <span class="string">'enabled'</span>, ufw will not flush</span><br><span class="line">       the chains when adding or removing rules (but will when modifying a rule or changing the default policy). By default, ufw will prompt when  enabling  the  firewall  <span class="keyword">while</span>  running</span><br><span class="line">       under ssh. This can be disabled by using <span class="string">'ufw --force enable'</span>.</span><br><span class="line"></span><br><span class="line">APPLICATION INTEGRATION</span><br><span class="line">       ufw supports application integration by reading profiles located <span class="keyword">in</span> /etc/ufw/applications.d. To list the names of application profiles known to ufw, use:</span><br><span class="line"></span><br><span class="line">         ufw app list</span><br><span class="line"></span><br><span class="line">       Users can specify an application name when adding a rule (quoting any profile names with spaces). For example, when using the simple syntax, users can use:</span><br><span class="line"></span><br><span class="line">         ufw allow &lt;name&gt;</span><br><span class="line"></span><br><span class="line">       Or <span class="keyword">for</span> the extended syntax:</span><br><span class="line"></span><br><span class="line">         ufw allow from 192.168.0.0/16 to any app &lt;name&gt;</span><br><span class="line"></span><br><span class="line">       You should not specify the protocol with either syntax, and with the extended syntax, use app <span class="keyword">in</span> place of the port clause.</span><br><span class="line"></span><br><span class="line">       Details on the firewall profile <span class="keyword">for</span> a given application can be seen with:</span><br><span class="line"></span><br><span class="line">         ufw app info &lt;name&gt;</span><br><span class="line"></span><br><span class="line">       <span class="built_in">where</span> <span class="string">'&lt;name&gt;'</span> is one of the applications seen with the app list <span class="built_in">command</span>.  Users may also specify all to see the profiles <span class="keyword">for</span> all known applications.</span><br><span class="line"></span><br><span class="line">       Syntax <span class="keyword">for</span> the application profiles is a simple .INI format:</span><br><span class="line"></span><br><span class="line">         [&lt;name&gt;]</span><br><span class="line">         title=&lt;title&gt;</span><br><span class="line">         description=&lt;description&gt;</span><br><span class="line">         ports=&lt;ports&gt;</span><br><span class="line"></span><br><span class="line">       The  <span class="string">'ports'</span>  field  may specify a <span class="string">'|'</span>-separated list of ports/protocols <span class="built_in">where</span> the protocol is optional. A comma-separated list or a range (specified with <span class="string">'start:end'</span>) may also be</span><br><span class="line">       used to specify multiple ports, <span class="keyword">in</span> <span class="built_in">which</span> <span class="keyword">case</span> the protocol is required. For example:</span><br><span class="line"></span><br><span class="line">         [SomeService]</span><br><span class="line">         title=Some title</span><br><span class="line">         description=Some description</span><br><span class="line">         ports=12/udp|34|56,78:90/tcp</span><br><span class="line"></span><br><span class="line">       In the above example, <span class="string">'SomeService'</span> may be used <span class="keyword">in</span> app rules and it specifies UDP port 12, TCP and UDP on port 34 and TCP ports 56 and 78-90 inclusive.</span><br><span class="line"></span><br><span class="line">       After creating or editing an application profile, users can run:</span><br><span class="line"></span><br><span class="line">         ufw app update &lt;name&gt;</span><br><span class="line"></span><br><span class="line">       This <span class="built_in">command</span> will automatically update the firewall with updated profile information. If specify <span class="string">'all'</span> <span class="keyword">for</span> name, <span class="keyword">then</span> all the profiles will be updated.  To update  a  profile  and</span><br><span class="line">       add a new rule to the firewall automatically, users can run:</span><br><span class="line"></span><br><span class="line">         ufw app update --add-new &lt;name&gt;</span><br><span class="line"></span><br><span class="line">       The behavior of the update --add-new <span class="built_in">command</span> can be configured using:</span><br><span class="line"></span><br><span class="line">         ufw app default &lt;policy&gt;</span><br><span class="line"></span><br><span class="line">       The  default  application  policy  is skip, <span class="built_in">which</span> means that the update --add-new <span class="built_in">command</span> will <span class="keyword">do</span> nothing. Users may also specify a policy of allow or deny so the update --add-new</span><br><span class="line">       <span class="built_in">command</span> may automatically update the firewall.  WARNING: it may be a security to risk to use a default allow policy <span class="keyword">for</span> application profiles. Carefully consider the security rami‐</span><br><span class="line">       fications before using a default allow policy.</span><br><span class="line"></span><br><span class="line">LOGGING</span><br><span class="line">       ufw supports multiple logging levels. ufw defaults to a loglevel of <span class="string">'low'</span> when a loglevel is not specified. Users may specify a loglevel with:</span><br><span class="line"></span><br><span class="line">         ufw logging LEVEL</span><br><span class="line"></span><br><span class="line">       LEVEL may be <span class="string">'off'</span>, <span class="string">'low'</span>, <span class="string">'medium'</span>, <span class="string">'high'</span> and <span class="string">'full'</span>. Log levels are defined as:</span><br><span class="line"></span><br><span class="line">       off    disables ufw managed logging</span><br><span class="line"></span><br><span class="line">       low    logs all blocked packets not matching the defined policy (with rate limiting), as well as packets matching logged rules</span><br><span class="line"></span><br><span class="line">       medium <span class="built_in">log</span> level low, plus all allowed packets not matching the defined policy, all INVALID packets, and all new connections.  All logging is <span class="keyword">done</span> with rate limiting.</span><br><span class="line"></span><br><span class="line">       high   <span class="built_in">log</span> level medium (without rate limiting), plus all packets with rate limiting</span><br><span class="line"></span><br><span class="line">       full   <span class="built_in">log</span> level high without rate limiting</span><br><span class="line"></span><br><span class="line">       Loglevels above medium generate a lot of logging output, and may quickly fill up your disk. Loglevel medium may generate a lot of logging output on a busy system.</span><br><span class="line"></span><br><span class="line">       Specifying <span class="string">'on'</span> simply enables logging at <span class="built_in">log</span> level <span class="string">'low'</span> <span class="keyword">if</span> logging is currently not enabled.</span><br><span class="line"></span><br><span class="line">REPORTS</span><br><span class="line">       The following reports are supported. Each is based on the live system and with the exception of the listening report, is <span class="keyword">in</span> raw iptables format:</span><br><span class="line"></span><br><span class="line">         raw</span><br><span class="line">         builtins</span><br><span class="line">         before-rules</span><br><span class="line">         user-rules</span><br><span class="line">         after-rules</span><br><span class="line">         logging-rules</span><br><span class="line">         listening</span><br><span class="line">         added</span><br><span class="line"></span><br><span class="line">       The raw report shows the complete firewall, <span class="keyword">while</span> the others show a subset of what is <span class="keyword">in</span> the raw report.</span><br><span class="line"></span><br><span class="line">       The  listening  report  will  display  the ports on the live system <span class="keyword">in</span> the listening state <span class="keyword">for</span> tcp and the open state <span class="keyword">for</span> udp, along with the address of the interface and the exe‐</span><br><span class="line">       cutable listening on the port. An <span class="string">'*'</span> is used <span class="keyword">in</span> place of the address of the interface when the executable is bound to all interfaces on that port. Following this information is a</span><br><span class="line">       list of rules <span class="built_in">which</span> may affect connections on this port. The rules are listed <span class="keyword">in</span> the order they are evaluated by the kernel, and the first match wins. Please note that the default</span><br><span class="line">       policy is not listed and tcp6 and udp6 are shown only <span class="keyword">if</span> IPV6 is enabled.</span><br><span class="line"></span><br><span class="line">       The added report displays the list of rules as they were added on the <span class="built_in">command</span>-line. This report does not show the status of  the  running  firewall  (use  <span class="string">'ufw  status'</span>  instead).</span><br><span class="line">       Because  rules  are normalized by ufw, rules may look different than the originally added rule. Also, ufw does not record <span class="built_in">command</span> ordering, so an equivalent ordering is used <span class="built_in">which</span></span><br><span class="line">       lists IPv6-only rules after other rules.</span><br><span class="line"></span><br><span class="line">NOTES</span><br><span class="line">       On installation, ufw is disabled with a default incoming policy of deny, a default forward policy of deny, and a default outgoing policy of allow, with stateful tracking  <span class="keyword">for</span>  NEW</span><br><span class="line">       connections <span class="keyword">for</span> incoming and forwarded connections.  In addition to the above, a default ruleset is put <span class="keyword">in</span> place that does the following:</span><br><span class="line"></span><br><span class="line">       - DROP packets with RH0 headers</span><br><span class="line"></span><br><span class="line">       - DROP INVALID packets</span><br><span class="line"></span><br><span class="line">       -  ACCEPT  certain  icmp packets (INPUT and FORWARD): destination-unreachable, <span class="built_in">source</span>-quench, time-exceeded, parameter-problem, and <span class="built_in">echo</span>-request <span class="keyword">for</span> IPv4. destination-unreachable,</span><br><span class="line">       packet-too-big, time-exceeded, parameter-problem, and <span class="built_in">echo</span>-request <span class="keyword">for</span> IPv6.</span><br><span class="line"></span><br><span class="line">       - ACCEPT icmpv6 packets <span class="keyword">for</span> stateless autoconfiguration (INPUT)</span><br><span class="line"></span><br><span class="line">       - ACCEPT ping replies from IPv6 link-local (ffe8::/10) addresses (INPUT)</span><br><span class="line"></span><br><span class="line">       - ACCEPT DHCP client traffic (INPUT)</span><br><span class="line"></span><br><span class="line">       - DROP non-local traffic (INPUT)</span><br><span class="line"></span><br><span class="line">       - ACCEPT mDNS (zeroconf/bonjour/avahi 224.0.0.251 <span class="keyword">for</span> IPv4 and ff02::fb <span class="keyword">for</span> IPv6) <span class="keyword">for</span> service discovery (INPUT)</span><br><span class="line"></span><br><span class="line">       - ACCEPT UPnP (239.255.255.250 <span class="keyword">for</span> IPv4 and ff02::f <span class="keyword">for</span> IPv6) <span class="keyword">for</span> service discovery (INPUT)</span><br><span class="line"></span><br><span class="line">       Rule ordering is important and the first match wins. Therefore when adding rules, add the more specific rules first with more general rules later.</span><br><span class="line"></span><br><span class="line">       ufw is not intended to provide complete firewall functionality via its <span class="built_in">command</span> interface, but instead provides an easy way to add or remove simple rules.</span><br><span class="line"></span><br><span class="line">       The status <span class="built_in">command</span> shows basic information about the state of the firewall, as well as rules managed via the ufw <span class="built_in">command</span>. It does not show rules from the rules files <span class="keyword">in</span>  /etc/ufw.</span><br><span class="line">       To see the complete state of the firewall, users can ufw show raw.  This displays the filter, nat, mangle and raw tables using:</span><br><span class="line"></span><br><span class="line">         iptables -n -L -v -x -t &lt;table&gt;</span><br><span class="line">         ip6tables -n -L -v -x -t &lt;table&gt;</span><br><span class="line"></span><br><span class="line">       See the iptables and ip6tables documentation <span class="keyword">for</span> more details.</span><br><span class="line"></span><br><span class="line">       If the default policy is <span class="built_in">set</span> to REJECT, ufw may interfere with rules added outside of the ufw framework. See README <span class="keyword">for</span> details.</span><br><span class="line"></span><br><span class="line">       IPV6  is  allowed  by  default.  To  change  this behavior to only accept IPv6 traffic on the loopback interface, <span class="built_in">set</span> IPV6 to <span class="string">'no'</span> <span class="keyword">in</span> /etc/default/ufw and reload ufw. When IPv6 is</span><br><span class="line">       enabled, you may specify rules <span class="keyword">in</span> the same way as <span class="keyword">for</span> IPv4 rules, and they will be displayed with ufw status. Rules that match both IPv4 and IPv6 addresses apply to both  IP  ver‐</span><br><span class="line">       sions. For example, when IPv6 is enabled, the following rule will allow access to port 22 <span class="keyword">for</span> both IPv4 and IPv6 traffic:</span><br><span class="line"></span><br><span class="line">         ufw allow 22</span><br><span class="line"></span><br><span class="line">       IPv6 over IPv4 tunnels and 6to4 are supported by using the <span class="string">'ipv6'</span> protocol (<span class="string">'41'</span>). This protocol can only be used with the full syntax. For example:</span><br><span class="line"></span><br><span class="line">         ufw allow to 10.0.0.1 proto ipv6</span><br><span class="line">         ufw allow to 10.0.0.1 from 10.4.0.0/16 proto ipv6</span><br><span class="line"></span><br><span class="line">       IPSec is supported by using the <span class="string">'esp'</span> (<span class="string">'50'</span>) and <span class="string">'ah'</span> (<span class="string">'51'</span>) protocols. These protocols can only be used with the full syntax. For example:</span><br><span class="line"></span><br><span class="line">         ufw allow to 10.0.0.1 proto esp</span><br><span class="line">         ufw allow to 10.0.0.1 from 10.4.0.0/16 proto esp</span><br><span class="line">         ufw allow to 10.0.0.1 proto ah</span><br><span class="line">         ufw allow to 10.0.0.1 from 10.4.0.0/16 proto ah</span><br><span class="line"></span><br><span class="line">       In  addition  to  the <span class="built_in">command</span>-line interface, ufw also provides a framework <span class="built_in">which</span> allows administrators to modify default behavior as well as take full advantage of netfilter. See</span><br><span class="line">       the ufw-framework manual page <span class="keyword">for</span> more information.</span><br><span class="line"></span><br><span class="line">SEE ALSO</span><br><span class="line">       ufw-framework(8), iptables(8), ip6tables(8), iptables-restore(8), ip6tables-restore(8), sysctl(8), sysctl.conf(5)</span><br><span class="line"></span><br><span class="line">AUTHOR</span><br><span class="line">       ufw is Copyright 2008-2014, Canonical Ltd.</span><br><span class="line"></span><br><span class="line">       ufw and this manual page was originally written by Jamie Strandboge &lt;jamie@canonical.com&gt;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
        <tag>防火墙</tag>
      </tags>
  </entry>
</search>
